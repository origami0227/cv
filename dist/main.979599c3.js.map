{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,EAA4C;;AAC5C,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,MAAM,81CAAV,EA4CG;;AACH,IAAIC,OAAO,GAAG,EAAd,EAAkB;;AAClB,IAAIC,CAAC,GAAG,CAAR,EAEA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfC,EAAAA,UAAU,CAAC,YAAM;AACf;AACA;AACA,QAAIJ,MAAM,CAACE,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACtBD,MAAAA,OAAO,IAAI,MAAX;AACD,KAFD,MAEO,IAAID,MAAM,CAACE,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC5BD,MAAAA,OAAO,IAAI,QAAX;AACD,KAFM,MAEA;AACLA,MAAAA,OAAO,IAAID,MAAM,CAACE,CAAD,CAAjB;AACD;;AACDN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB,EAZe,CAYY;;AAC3BZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAiB,KAAjB,EAbe,CAcf;;AACA,QAAIN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAgB,CAAxB,EAA2B;AACzB;AACAP,MAAAA,CAAC,IAAI,CAAL;AACAC,MAAAA,IAAI;AACL;AACF,GApBS,EAoBP,EApBO,CAAV;AAqBD,CAtBD;;AAuBAA,IAAI","file":"main.979599c3.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector(\"#html\"); //通过CSS选择器找到这个元素\nlet style = document.querySelector(\"#style\");\nlet string = `/*你好，我叫小钱\n* 接下来我演示一下我的前端功底\n* 首先我要准备一个div\n*/\n#div1 {\n  border:1px solid red;\n  width:200px;\n  height:200px;\n}\n/* 接下来我把div变成一个八卦图\n * 注意看好了\n * 首先把div变成一个圆\n */\n#div1 {\n  border-radius:50%;\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\n  border: none;\n}\n/* 八卦是阴阳形成的\n * 一黑一白\n*/\n#div1{\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n/* 加两个神秘的小球*/\n#div1::before{\n  width: 100px;\n  height: 100px;\n  top:0;\n  left: 50%;\n  transform:translateX(-50%);\n  background: #000;\n  border-radius:50%;\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n}\n#div1::after{\n  width: 100px;\n  height: 100px;\n  bottom:0;\n  left: 50%;\n  transform:translateX(-50%);\n  background: #fff;\n  border-radius:50%;\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);}\n`; //用来保存展示的结果\nlet string2 = \"\"; //缓存屏幕上展示的结果\nlet n = 0;\n\n// setInterval(()=>{\n//     n = n+1\n//     demo.innerHTML = n;\n// },1000)//setInterval是每多少秒执行一次，setTimeout只会执行一次\nlet step = () => {\n  setTimeout(() => {\n    //如果是回车就不照搬\n    //如果不是回车就照搬\n    if (string[n] === \"\\n\") {\n      string2 += \"<br>\";\n    } else if (string[n] === \" \") {\n      string2 += \"&nbsp;\";\n    } else {\n      string2 += string[n];\n    }\n    html.innerHTML = string2;\n    style.innerHTML = string.substring(0, n);\n    window.scrollTo(0, 99999); //设置滚动条\n    html.scrollTo(0, 99999);\n    // demo.innerHTML = string.substring(0,n);//string.substring(x,y)表示从第x项开始到第y项结束\n    if (n < string.length - 1) {\n      //如果不是最后一个\n      n += 1;\n      step();\n    }\n  }, 50);\n};\nstep();\n"]}